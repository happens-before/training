<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.qunar.fresh2017.mybatis.dao.EmployeeDao">

    <resultMap id="BaseResultMap" type="com.qunar.fresh2017.mybatis.model.EmployeeModel">
        <id column="id" property="id"/>
        <result column="staff_id" property="staffId"/>
        <result column="name" property="name"/>
        <result column="mobile" property="mobile"/>
        <result column="area" property="area"/>
        <result column="gender" property="gender"/>
        <result column="is_valid" property="isValid"/>
    </resultMap>

    <sql id="Base_Column_List">
		id, staff_id, name, mobile, area, gender, is_valid
	</sql>

    <select id="selectEmployeeByStaffId" parameterType="Integer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        employee
        WHERE
        staff_id = #{staffId}
    </select>

    <select id="selectEmployeeByName" parameterType="String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        employee
        WHERE
        name LIKE concat(#{name},'%')
    </select>

    <select id="selectEmployeeByIsValid" parameterType="Integer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        employee
        WHERE
        is_valid = #{isValid}
    </select>

    <select id="selectEmployeeForPageSortedByStaffId" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        employee
        ORDER BY
        staff_id
    </select>

    <insert id="insertEmployee" parameterType="EmployeeModel">
        INSERT INTO employee
        (
        staff_id,
        name,
        mobile,
        area,
        gender,
        is_valid
        )
        VALUES
        (
        #{staffId},
        #{name},
        #{mobile},
        #{area},
        #{gender},
        #{isValid}
        )
    </insert>

    <insert id="batchInsertEmployees" parameterType="List">
        INSERT INTO employee
        (
        staff_id,
        name,
        mobile,
        area,
        gender,
        is_valid
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.staffId},
            #{item.name},
            #{item.mobile},
            #{item.area},
            #{item.gender},
            #{item.isValid}
            )
        </foreach>
    </insert>

    <delete id="deleteEmployeeByStaffId" parameterType="Integer">
        DELETE FROM
        employee
        WHERE
        staff_id = #{staffId}
    </delete>

    <update id="updateEmployeeByStaffId" parameterType="EmployeeModel">
        UPDATE
        employee
        SET
        name = #{name},
        mobile = #{mobile},
        area = #{area},
        gender = #{gender},
        is_valid = #{isValid}
        WHERE
        staff_id = #{staffId}
    </update>

</mapper>